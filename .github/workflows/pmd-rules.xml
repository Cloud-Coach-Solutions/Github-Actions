<?xml version="1.0"?>
<ruleset name="Cloud Coach Rules"
	xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
	<description>
		Cloud Coach PMD Ruleset
	</description>

	<!-- ** BEST PRACTICES CONFIGURATION ** -->
	<rule ref="category/apex/bestpractices.xml">
		<exclude name="AvoidGlobalModifier" />
		<exclude name="DebugsShouldUseLoggingLevel" />
	</rule>
	<rule ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/UnusedLocalVariable">
		<priority>3</priority>
	</rule>

	<!-- ** CODE STYLE CONFIGURATION ** -->
	<rule ref="category/apex/codestyle.xml">
	</rule>
	<rule ref="category/apex/codestyle.xml/ClassNamingConventions">
		<properties>
			<property name="testClassPattern" value="^(CC_[a-zA-Z0-9]*Test|CC_TestDataFactory)$" />
			<property name="abstractClassPattern" value="^CC_[a-zA-Z0-9]*" />
			<property name="classPattern" value="^CC_[a-zA-Z0-9]*" />
			<property name="interfacePattern" value="^CC_[a-zA-Z0-9]*" />
			<property name="enumPattern" value="^CC_[a-zA-Z0-9]*" />
		</properties>
	</rule>
	<rule ref="category/apex/codestyle.xml/FieldDeclarationsShouldBeAtStart">
		<priority>1</priority>
	</rule>

	<!-- ** DESIGN CONFIGURATION ** -->
	<rule ref="category/apex/design.xml">
	</rule>
	<rule ref="category/apex/design.xml/ExcessiveParameterList">
		<properties>
			<property name="minimum" value="7" />
		</properties>
	</rule>
	<rule
		ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts"
		message="Deeply nested if..then statements are hard to read. Consider creating a new method for the inner if statements."
	>
		<priority>3</priority>
		<properties>
        	<property name="problemDepth" value="8" />
		</properties>
	</rule>
	<rule ref="category/apex/design.xml/CognitiveComplexity">
		<priority>3</priority>
	</rule>
	<rule ref="category/apex/design.xml/CyclomaticComplexity">
		<priority>3</priority>
	</rule>
	<rule ref="category/apex/design.xml/ExcessiveClassLength">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/design.xml/NcssMethodCount">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/design.xml/StdCyclomaticComplexity">
		<priority>1</priority>
	</rule>
	<!-- <rule ref="category/apex/design.xml/UnusedMethod">
		<priority>1</priority>
	</rule> -->

	<!-- ** DOCUMENTATION CONFIGURATION ** -->
	<!-- <rule ref="category/apex/documentation.xml">
	</rule> -->

	<!-- ** ERROR PRONE CONFIGURATION ** -->
	<rule ref="category/apex/errorprone.xml">
	</rule>
	<rule ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/AvoidHardcodingId">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses">
		<priority>1</priority>
	</rule>

	<!-- ** PERFORMANCE CONFIGURATION ** -->
	<rule ref="category/apex/performance.xml">
	</rule>
	<rule ref="category/apex/performance.xml/AvoidDebugStatements">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/performance.xml/OperationWithLimitsInLoop">
		<priority>1</priority>
	</rule>

	<!-- ** SECURITY CONFIGURATION ** -->
	<rule ref="category/apex/security.xml">
		<exclude name="ApexCRUDViolation" />
	</rule>
	<rule ref="category/apex/security.xml/ApexSOQLInjection">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse">
		<priority>2</priority>
	</rule>
</ruleset>